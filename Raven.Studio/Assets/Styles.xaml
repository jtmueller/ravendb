<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
					xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
					xmlns:Editors="clr-namespace:Raven.Studio.Controls.Editors"
					xmlns:Controls="clr-namespace:System.Windows.Controls"
					xmlns:System="clr-namespace:System;assembly=mscorlib"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
					xmlns:Behaviors="clr-namespace:Raven.Studio.Behaviors"
					mc:Ignorable="d">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Brushes.xaml" />
		<ResourceDictionary Source="Images/Images.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="ScrollBar">
		<Setter Property="MinWidth" Value="17"/>
		<Setter Property="MinHeight" Value="17"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollBar">
					<Grid x:Name="Root" d:DesignWidth="188" d:DesignHeight="220">
						<Grid.Resources>

							<!-- RepeatButton Templates -->
							<ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root" Background="Transparent">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
								</Grid>
							</ControlTemplate>

							<!-- Horizontal Inc/Dec Templates -->
							<ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" Opacity="0" RadiusX="2" RadiusY="2" Fill="Transparent" StrokeThickness="0" />
									<Rectangle x:Name="Highlight" Opacity="0" RadiusX="1" RadiusY="1" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" />
									<Path Stretch="Uniform" Height="8" Width="4" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FFFFFFFF"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Path Stretch="Uniform" Height="8" Width="4" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FFFFFFFF"/>
								</Grid>
							</ControlTemplate>

							<!-- Vertical Inc/Dec Templates -->
							<ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" RadiusX="2" RadiusY="2" Fill="Transparent" StrokeThickness="1" />
									<Path Stretch="Uniform" Height="4" Width="8" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FFFFFFFF"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" RadiusX="2" RadiusY="2" Fill="Transparent" StrokeThickness="1" />
									<Path Stretch="Uniform" Height="4" Width="8" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FFFFFFFF"/>
								</Grid>
							</ControlTemplate>

							<!-- Thumb Templates -->
							<ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity" To="0" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Grid x:Name="ThumbVisual" Margin="1,0,1,0">
										<Rectangle x:Name="Background" RadiusX="4" RadiusY="4" StrokeThickness="1" Margin="1,0" >
											<Rectangle.Fill>
												<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
													<GradientStop Color="#FFE4E4E4" Offset="0.032"/>
													<GradientStop Color="#FFD1D1D1" Offset="0.973"/>
													<GradientStop Color="#FFF7F3F3" Offset="1"/>
													<GradientStop Color="White"/>
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
									</Grid>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity" To="0" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Grid x:Name="ThumbVisual" Margin="0,1,0,1">
										<Rectangle x:Name="Background" RadiusX="4" RadiusY="4" StrokeThickness="1" Margin="0,1" >
											<Rectangle.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FFE4E4E4" Offset="0.032"/>
													<GradientStop Color="#FFD1D1D1" Offset="0.973"/>
													<GradientStop Color="#FFF7F3F3" Offset="1"/>
													<GradientStop Color="White"/>
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
									</Grid>
								</Grid>
							</ControlTemplate>
						</Grid.Resources>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Horizontal Template -->
						<Grid x:Name="HorizontalRoot">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<!-- Track Layer -->
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" StrokeThickness="1" Stroke="#00000000" Fill="Transparent"/>
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" StrokeThickness="1" Opacity=".375" Stroke="#FFE9E9E9"/>
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" Margin="1">
								<Rectangle.Stroke>
									<LinearGradientBrush EndPoint="0.125,0.5" StartPoint="0.875,0.5">
										<GradientStop Color="#33FFFFFF"/>
										<GradientStop Color="#99FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Stroke>
							</Rectangle>

							<!-- Repeat Buttons + Thumb -->
							<RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" Width="16" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalDecrementTemplate}" Margin="1" Background="Transparent" />
							<RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" Width="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" Background="Transparent" />
							<Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}"  MinWidth="18" Width="18" Grid.Column="2" Template="{StaticResource HorizontalThumbTemplate}" />
							<RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" Background="Transparent" />
							<RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" Width="16" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalIncrementTemplate}" Margin="1" Background="Transparent" />
						</Grid>

						<!-- Vertical Template -->
						<Grid x:Name="VerticalRoot" Visibility="Collapsed">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!-- Track Layer -->
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" StrokeThickness="1" Stroke="#00000000" Fill="Transparent"/>
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" StrokeThickness="1" Opacity=".375" Stroke="#FFE9E9E9"/>
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" Margin="1">
								<Rectangle.Stroke>
									<LinearGradientBrush EndPoint="0.125,0.5" StartPoint="0.875,0.5">
										<GradientStop Color="#33FFFFFF"/>
										<GradientStop Color="#99FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Stroke>
							</Rectangle>

							<!-- Repeat Buttons + Thumb -->
							<RepeatButton x:Name="VerticalSmallDecrease" Grid.Row="0" Height="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalDecrementTemplate}" Margin="1" />
							<RepeatButton x:Name="VerticalLargeDecrease" Grid.Row="1" Height="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
							<Thumb x:Name="VerticalThumb" MinHeight="18" Height="18" Grid.Row="2" Template="{StaticResource VerticalThumbTemplate}" />
							<RepeatButton x:Name="VerticalLargeIncrease" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
							<RepeatButton x:Name="VerticalSmallIncrease" Grid.Row="4" Height="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalIncrementTemplate}" Margin="1" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ListBoxItem">
		<Setter Property="Padding" Value="3" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="BackgroundRectangle" Opacity="0" Fill="#FFC4C4C4" IsHitTestVisible="False" RadiusX="0" RadiusY="0"/>
						<ContentPresenter
							  x:Name="contentPresenter"
							  Content="{TemplateBinding Content}"
							  ContentTemplate="{TemplateBinding ContentTemplate}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  Margin="{TemplateBinding Padding}"/>
						<Rectangle x:Name="FocusVisualElement" Stroke="#9D9D9D" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ComboBoxItem">
		<Setter Property="Padding" Value="3" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle2" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="BackgroundRectangle" Opacity="0" Fill="Gainsboro" IsHitTestVisible="False" RadiusX="0" RadiusY="0"/>
						<Rectangle x:Name="BackgroundRectangle2" Opacity="0" Fill="Gainsboro" IsHitTestVisible="False" RadiusX="0" RadiusY="0"/>
						<ContentPresenter
							  x:Name="contentPresenter"
							  Content="{TemplateBinding Content}"
							  ContentTemplate="{TemplateBinding ContentTemplate}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  Margin="{TemplateBinding Padding}"/>
						<Rectangle x:Name="FocusVisualElement" Stroke="#9D9D9D" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Style_ScrollBar_Slim" TargetType="ScrollBar">
		<Setter Property="MinWidth" Value="8"/>
		<Setter Property="MinHeight" Value="8"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollBar">
					<Grid x:Name="Root" d:DesignWidth="188" d:DesignHeight="220">
						<Grid.Resources>

							<!-- RepeatButton Templates -->
							<ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root" Background="Transparent">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
								</Grid>
							</ControlTemplate>

							<!-- Horizontal Inc/Dec Templates -->
							<ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" Opacity="0" RadiusX="1" RadiusY="1" Fill="Transparent" StrokeThickness="0" />
									<Rectangle x:Name="Highlight" Opacity="0" RadiusX="1" RadiusY="1" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" />
									<Path Stretch="Uniform" Height="4" Width="2" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="1" RadiusY="1" Fill="#FFFFFFFF"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Path Stretch="Uniform" Height="4" Width="2" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="1" RadiusY="1" Fill="#FFFFFFFF"/>
								</Grid>
							</ControlTemplate>

							<!-- Vertical Inc/Dec Templates -->
							<ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" RadiusX="1" RadiusY="1" Fill="Transparent" StrokeThickness="1" />
									<Path Stretch="Uniform" Height="2" Width="4" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="1" RadiusY="1" Fill="#FFFFFFFF"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" RadiusX="2" RadiusY="2" Fill="Transparent" StrokeThickness="1" />
									<Path Stretch="Uniform" Height="2" Width="4" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="1" RadiusY="1" Fill="#FFFFFFFF"/>
								</Grid>
							</ControlTemplate>

							<!-- Thumb Templates -->
							<ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity" To="0" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Grid x:Name="ThumbVisual" Margin="1,0,1,0">
										<Rectangle x:Name="Background" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="1,0" >
											<Rectangle.Fill>
												<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
													<GradientStop Color="#FFACACAC" Offset="0.032"/>
													<GradientStop Color="#FFA6A6A6" Offset="0.973"/>
													<GradientStop Color="#FFF7F3F3" Offset="1"/>
													<GradientStop Color="White"/>
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
									</Grid>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal" />
											<VisualState x:Name="MouseOver">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard/>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity" To="0" />
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Grid x:Name="ThumbVisual" Margin="0,1,0,1">
										<Rectangle x:Name="Background" RadiusX="1" RadiusY="1" StrokeThickness="1" Margin="0,1" >
											<Rectangle.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FFACACAC" Offset="0.032"/>
													<GradientStop Color="#FFA6A6A6" Offset="0.973"/>
													<GradientStop Color="#FFF7F3F3" Offset="1"/>
													<GradientStop Color="White"/>
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
									</Grid>
								</Grid>
							</ControlTemplate>
						</Grid.Resources>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Horizontal Template -->
						<Grid x:Name="HorizontalRoot">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<!-- Track Layer -->
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" StrokeThickness="1" Stroke="#00000000" Fill="Transparent"/>
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" StrokeThickness="1" Opacity=".375" Stroke="#FFE9E9E9"/>
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" Margin="1">
								<Rectangle.Stroke>
									<LinearGradientBrush EndPoint="0.125,0.5" StartPoint="0.875,0.5">
										<GradientStop Color="#33FFFFFF"/>
										<GradientStop Color="#99FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Stroke>
							</Rectangle>

							<!-- Repeat Buttons + Thumb -->
							<RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" Width="8" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalDecrementTemplate}" Margin="1" Background="Transparent" />
							<RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" Width="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" Background="Transparent" />
							<Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}"  MinWidth="9" Width="9" Grid.Column="2" Template="{StaticResource HorizontalThumbTemplate}" />
							<RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" Background="Transparent" />
							<RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" Width="8" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalIncrementTemplate}" Margin="1" Background="Transparent" />
						</Grid>

						<!-- Vertical Template -->
						<Grid x:Name="VerticalRoot" Visibility="Collapsed">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!-- Track Layer -->
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" StrokeThickness="1" Stroke="#00000000" Fill="Transparent"/>
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" StrokeThickness="1" Opacity=".375" Stroke="#FFE9E9E9"/>
							<Rectangle Grid.RowSpan="5" RadiusX="1" RadiusY="1" Margin="1">
								<Rectangle.Stroke>
									<LinearGradientBrush EndPoint="0.125,0.5" StartPoint="0.875,0.5">
										<GradientStop Color="#33FFFFFF"/>
										<GradientStop Color="#99FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Stroke>
							</Rectangle>

							<!-- Repeat Buttons + Thumb -->
							<RepeatButton x:Name="VerticalSmallDecrease" Grid.Row="0" Height="8" IsTabStop="False" Interval="50" Template="{StaticResource VerticalDecrementTemplate}" Margin="1" />
							<RepeatButton x:Name="VerticalLargeDecrease" Grid.Row="1" Height="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
							<Thumb x:Name="VerticalThumb" MinHeight="18" Height="9" Grid.Row="2" Template="{StaticResource VerticalThumbTemplate}" />
							<RepeatButton x:Name="VerticalLargeIncrease" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
							<RepeatButton x:Name="VerticalSmallIncrease" Grid.Row="4" Height="8" IsTabStop="False" Interval="50" Template="{StaticResource VerticalIncrementTemplate}" Margin="1" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- ******MAIN PAGE STYLES****** -->
	<!-- **************************** -->
	<!-- Primary Color Brushes -->
  <SolidColorBrush x:Key="NavigationBackgroundColorBrush" Color="#FF484848"/>
  <SolidColorBrush x:Key="NavigationForegroundColorBrush" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="HighLightColorBrush" Color="#FF0097FC"/>
  <SolidColorBrush x:Key="HoverHyperlinkForegroundColorBrush" Color="#FFEBF7FF"/>
  <SolidColorBrush x:Key="HoverHyperLinkBackgroundColorBrush" Color="#FF747474"/>
  <SolidColorBrush x:Key="BodyTextColorBrush" Color="#FF313131"/>

  <!-- LayoutRoot Grid Style -->
  <Style x:Key="LayoutRootGridStyle" TargetType="Grid">
	<Setter Property="Background" Value="#FFFFFFFF"/>
  </Style>

  <!-- Content Border Style -->
  <Style x:Key="ContentBorderStyle" TargetType="Border">
	<Setter Property="Background">
	  <Setter.Value>
		<LinearGradientBrush EndPoint="0.5,0.045" StartPoint="0.5,0">
		  <GradientStop Color="#6FCCCCCC"/>
		  <GradientStop Color="#00CCCCCC" Offset="1"/>
		</LinearGradientBrush>
	  </Setter.Value>
	</Setter>
	<Setter Property="BorderBrush" Value="#FFFFFFFF"/>
	<Setter Property="BorderThickness" Value="0,3,0,0"/>
	<Setter Property="Margin" Value="0,42,0,0"/>
	<Setter Property="VerticalAlignment" Value="Stretch"/>
	<Setter Property="HorizontalAlignment" Value="Stretch"/>
  </Style>

  <!-- Content Frame Style -->
  <Style x:Key="ContentFrameStyle" TargetType="sdk:Frame">
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="BorderBrush" Value="Transparent"/>
	<Setter Property="Padding" Value="0,0,0,15"/>
	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
  </Style>

  <!-- Navigation Grid Style -->
  <Style x:Key="NavigationGridStyle" TargetType="Grid">
	<Setter Property="Background" Value="{StaticResource NavigationBackgroundColorBrush}"/>
	<Setter Property="Margin" Value="0"/>
	<Setter Property="VerticalAlignment" Value="Top"/>
  </Style>

  <!-- Branding Border Style -->
  <Style x:Key="BrandingBorderStyle" TargetType="Border">
	<Setter Property="Height" Value="42"/>
	<Setter Property="Margin" Value="25,0,25,0"/>
	<Setter Property="VerticalAlignment" Value="Top"/>
	<Setter Property="HorizontalAlignment" Value="Left"/>
  </Style>

  <!-- Branding StackPanel Style -->
  <Style x:Key="BrandingStackPanelStyle" TargetType="StackPanel">
	<Setter Property="HorizontalAlignment" Value="Left"/>
	<Setter Property="Orientation" Value="Horizontal"/>
  </Style>

  <!-- Logo Path Style -->
  <Style x:Key="LogoIcon" TargetType="ContentControl">
	<Setter Property="Height" Value="24"/>
	<Setter Property="Width" Value="24"/>
	<Setter Property="Margin" Value="0,1,10,0"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="ContentControl">
		  <Grid>
			<Path UseLayoutRounding='False' Fill="{StaticResource HighLightColorBrush}" Stretch="Fill" Data="M8,0 C12.417931,2.8898596E-06 16,3.5814998 16,8 C16,12.417819 12.41803,16 8,16 C3.5816212,16 6.1398991E-06,12.417912 0,8 C1.5351338E-06,6.8954077 0.22386749,5.8431153 0.62867981,4.8860393 C0.65398115,4.82622 0.6799894,4.7667723 0.70669389,4.7077074 L0.73170543,4.6541386 L5.6357112,9.5581446 L3.7429986,11.450858 L3.7429986,11.493001 L11.669835,11.493001 L11.669835,3.5661643 L11.627691,3.5661643 L9.7349787,5.4588776 L4.8993444,0.62324351 L5.0666013,0.55490673 C5.5510159,0.36389247 6.0585575,0.21878535 6.5838675,0.12495131 C6.8465204,0.078035071 7.1136146,0.043936942 7.3844767,0.023327276 C7.5199089,0.013022465 7.6562829,0.0060896641 7.7935166,0.0026129775 C7.862133,0.00087448902 7.9309645,4.5157563E-08 8,0 z"/>
		  </Grid>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!-- ApplicationName Style -->
  <Style x:Key="ApplicationNameStyle" TargetType="TextBlock">
	<Setter Property="Foreground" Value="{StaticResource NavigationForegroundColorBrush}"/>
	<Setter Property="FontSize" Value="14"/>
	<Setter Property="FontWeight" Value="Bold"/>
	<Setter Property="Margin" Value="0,2,0,0"/>
	<Setter Property="VerticalAlignment" Value="Center"/>
	<Setter Property="Effect">
	  <Setter.Value>
		<DropShadowEffect BlurRadius="10" Opacity="0.25" ShadowDepth="0"/>
	  </Setter.Value>
	</Setter>
  </Style>

	<!-- Links Border Style -->
  <Style x:Key="LinksBorderStyle" TargetType="Border">
	<Setter Property="Height" Value="42"/>
	<Setter Property="Margin" Value="25,0,25,0"/>
	<Setter Property="HorizontalAlignment" Value="Right"/>
  </Style>

  <!-- Links StackPanel Style -->
  <Style x:Key="LinksStackPanelStyle" TargetType="StackPanel">
	<Setter Property="VerticalAlignment" Value="Center"/>
	<Setter Property="HorizontalAlignment" Value="Left"/>
	<Setter Property="Orientation" Value="Horizontal"/>
  </Style>

  <!-- Link Style -->
  <Style x:Key="LinkStyle" TargetType="HyperlinkButton">
	<Setter Property="Background" Value="{StaticResource HighLightColorBrush}"/>
	<Setter Property="BorderThickness" Value="1"/>
	<Setter Property="BorderBrush" Value="#FF9D9492"/>
	<Setter Property="Foreground" Value="{StaticResource NavigationForegroundColorBrush}"/>
	<Setter Property="FontSize" Value="12"/>
	<Setter Property="Cursor" Value="Hand"/>
	<Setter Property="MinHeight" Value="28"/>
	<Setter Property="MinWidth" Value="78"/>
	<Setter Property="VerticalContentAlignment" Value="Center"/>
	<Setter Property="HorizontalContentAlignment" Value="Center"/>
	<Setter Property="Padding" Value="8,4,8,4"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="HyperlinkButton">
		  <Grid x:Name="ButtonGrid" Cursor="{TemplateBinding Cursor}">
			<VisualStateManager.VisualStateGroups>
			  <VisualStateGroup x:Name="CommonStates">
				<VisualState x:Name="Normal"/>
				<VisualState x:Name="MouseOver">
				  <Storyboard>
					<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
					  <DiscreteObjectKeyFrame KeyTime="00:00:00">
						<DiscreteObjectKeyFrame.Value>
						  <Visibility>Visible</Visibility>
						</DiscreteObjectKeyFrame.Value>
					  </DiscreteObjectKeyFrame>
					</ObjectAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.95"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="10"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
					</DoubleAnimationUsingKeyFrames>
				  </Storyboard>
				</VisualState>
				<VisualState x:Name="Pressed">
				  <Storyboard>
					<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
					  <DiscreteObjectKeyFrame KeyTime="00:00:00">
						<DiscreteObjectKeyFrame.Value>
						  <Visibility>Visible</Visibility>
						</DiscreteObjectKeyFrame.Value>
					  </DiscreteObjectKeyFrame>
					</ObjectAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.8"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="5"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
					</DoubleAnimationUsingKeyFrames>
				  </Storyboard>
				</VisualState>
				<VisualState x:Name="Disabled">
				  <Storyboard>
					<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
					  <DiscreteObjectKeyFrame KeyTime="0">
						<DiscreteObjectKeyFrame.Value>
						  <Visibility>Visible</Visibility>
						</DiscreteObjectKeyFrame.Value>
					  </DiscreteObjectKeyFrame>
					</ObjectAnimationUsingKeyFrames>
					<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
					  <DiscreteObjectKeyFrame KeyTime="00:00:00">
						<DiscreteObjectKeyFrame.Value>
						  <HorizontalAlignment>Center</HorizontalAlignment>
						</DiscreteObjectKeyFrame.Value>
					  </DiscreteObjectKeyFrame>
					</ObjectAnimationUsingKeyFrames>
					<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
					  <DiscreteObjectKeyFrame KeyTime="00:00:00">
						<DiscreteObjectKeyFrame.Value>
						  <VerticalAlignment>Center</VerticalAlignment>
						</DiscreteObjectKeyFrame.Value>
					  </DiscreteObjectKeyFrame>
					</ObjectAnimationUsingKeyFrames>
					<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
					  <DiscreteObjectKeyFrame KeyTime="00:00:00">
						<DiscreteObjectKeyFrame.Value>
						  <HorizontalAlignment>Center</HorizontalAlignment>
						</DiscreteObjectKeyFrame.Value>
					  </DiscreteObjectKeyFrame>
					</ObjectAnimationUsingKeyFrames>
					<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
					  <DiscreteObjectKeyFrame KeyTime="00:00:00">
						<DiscreteObjectKeyFrame.Value>
						  <VerticalAlignment>Center</VerticalAlignment>
						</DiscreteObjectKeyFrame.Value>
					  </DiscreteObjectKeyFrame>
					</ObjectAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
					</DoubleAnimationUsingKeyFrames>
				  </Storyboard>
				</VisualState>
			  </VisualStateGroup>
			  <VisualStateGroup x:Name="LinkStates">
				<VisualState x:Name="ActiveLink">
				  <Storyboard>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
					</DoubleAnimationUsingKeyFrames>
				  </Storyboard>
				</VisualState>
				<VisualState x:Name="InactiveLink"/>
			  </VisualStateGroup>
			  <VisualStateGroup x:Name="FocusStates">
				<VisualState x:Name="Focused">
				  <Storyboard>
					<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
					  <SplineDoubleKeyFrame KeyTime="0" Value="0.35"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusX)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
					</DoubleAnimationUsingKeyFrames>
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusY)">
					  <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
					</DoubleAnimationUsingKeyFrames>
				  </Storyboard>
				</VisualState>
				<VisualState x:Name="Unfocused"/>
			  </VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Rectangle x:Name="FocusVisualElement" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1"/>
			<Border x:Name="ActiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0"/>
			<Border x:Name="ContentBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Opacity="1">
			  <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="1">
				<ContentPresenter.Effect>
				  <DropShadowEffect ShadowDepth="0" Color="#FF484848" Opacity="0.65" BlurRadius="0"/>
				</ContentPresenter.Effect>
			  </ContentPresenter>
			</Border>
			<Border x:Name="InteractiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{StaticResource HoverHyperLinkBackgroundColorBrush}" BorderThickness="1,1,1,1" Opacity="0" BorderBrush="{StaticResource HoverHyperLinkBackgroundColorBrush}" CornerRadius="1,1,1,1"/>
			<Border x:Name="InteractiveElementBorder" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed">
			  <TextBlock x:Name="InteractiveElement" Foreground="{StaticResource HoverHyperlinkForegroundColorBrush}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"/>
			</Border>
			<TextBlock x:Name="DisabledOverlay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Foreground="#FFAAAAAA" Visibility="Collapsed"/>
		  </Grid>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!-- Divider Style -->
  <Style x:Key="DividerStyle" TargetType="Rectangle">
	<Setter Property="Fill" Value="#1FFFFFFF"/>
	<Setter Property="Stroke" Value="Transparent"/>
	<Setter Property="Width" Value="1"/>
	<Setter Property="Margin" Value="2,4,2,4"/>
  </Style>

  <!-- ******CONTENT PAGE STYLES****** -->
  <!-- ******************************* -->
  <!-- Page Style -->
  <Style x:Key="PageStyle" TargetType="sdk:Page"/>

  <!-- Page ScrollViewer Style -->
  <Style x:Key="PageScrollViewerStyle" TargetType="ScrollViewer">
	<Setter Property="BorderBrush" Value="Transparent"/>
	<Setter Property="BorderThickness" Value="0,1,0,1"/>
	<Setter Property="Margin" Value="-58,-15,-58,-15"/>
	<Setter Property="Padding" Value="58,0,58,0"/>
	<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
	<Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
  </Style>

  <!-- Content Panel Style -->
  <Style x:Key="ContentPanelStyle" TargetType="StackPanel"/>

  <!-- Header Text Style -->
  <Style x:Key="Style_Text_Header" TargetType="TextBlock">
	<Setter Property="Foreground" Value="{StaticResource Brush_ContrastColor}"/>
	<Setter Property="FontFamily" Value="Arial"/>
	<Setter Property="FontSize" Value="16"/>
	<Setter Property="FontWeight" Value="Bold"/>
	<Setter Property="TextWrapping" Value="NoWrap"/>
	<Setter Property="Margin" Value="0,0,0,0"/>
	<Setter Property="HorizontalAlignment" Value="Left"/>
  </Style>
	
	<!-- Sub Text Style -->
	<Style x:Key="Style_Text_VerticalHeader" TargetType="TextBlock">
	<Setter Property="Foreground" Value="{StaticResource Brush_ContrastColor}"/>
	<Setter Property="FontFamily" Value="Arial"/>
	<Setter Property="FontSize" Value="16"/>
	<Setter Property="FontWeight" Value="Bold"/>
	<Setter Property="TextWrapping" Value="Wrap"/>
	<Setter Property="Margin" Value="0,0,4,0"/>
	<Setter Property="VerticalAlignment" Value="Center"/>
  </Style>

  <!-- Content Text Style -->
  <Style x:Key="ContentTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource BodyTextColorBrush}"/>
			<Setter Property="FontFamily" Value="Arial"/>
			<Setter Property="FontSize" Value="13"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Margin" Value="0,2,0,2"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
  </Style>

  <!-- Page HyperlinkButton Style -->	
  <Style x:Key="PageHyperlinkButtonStyle" TargetType="HyperlinkButton">
	<Setter Property="TargetName" Value="_new"/>
	<Setter Property="FontSize" Value="12"/>
	<Setter Property="VerticalAlignment" Value="Center"/>
  </Style>


	<!-- Documents panel -->
	<ItemsPanelTemplate x:Key="FluidWrapPanel">
		<toolkit:WrapPanel>
			
		</toolkit:WrapPanel>
	</ItemsPanelTemplate>

	<ItemsPanelTemplate x:Key="VerticalFluidWrapPanel">
		<toolkit:WrapPanel Orientation="Vertical">
			<i:Interaction.Behaviors>
				
			</i:Interaction.Behaviors>
		</toolkit:WrapPanel>
	</ItemsPanelTemplate>

	<Style x:Name="Style_ItemsControl_Fluid"
		   TargetType="ItemsControl">
		<Setter Property="ItemsPanel"
				Value="{StaticResource FluidWrapPanel}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="BorderThickness"
				Value="0" />
	</Style>

	<Style x:Name="Style_ItemsControl_IndexFields"
		   TargetType="ItemsControl">
		<Setter Property="ItemsPanel"
				Value="{StaticResource FluidWrapPanel}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Background" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ItemsControl">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="4"
							BorderThickness="{TemplateBinding BorderThickness}">
						<ItemsPresenter/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FFE9E9E9"/>
	</Style>
	
	<Style x:Name="Style_ItemsControl_QuerySortyBy"
		   TargetType="ItemsControl">
		<Setter Property="ItemsPanel"
				Value="{StaticResource FluidWrapPanel}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush" Value="#FFE9E9E9"/>
	</Style>
	
	

	<Style x:Name="Style_ListBox_Fluid"
		   TargetType="ListBox">
		<Setter Property="ItemsPanel"
				Value="{StaticResource FluidWrapPanel}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="BorderThickness"
				Value="0" />
	</Style>

	<Style x:Name="Style_ListBox_VerticalFluid"
		   TargetType="ListBox">
		<Setter Property="ItemsPanel"
				Value="{StaticResource VerticalFluidWrapPanel}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="BorderThickness"
				Value="0" />
	</Style>

	<Style x:Name="Style_ItemsControl_References"
		   TargetType="ItemsControl">
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ItemsControl">
					<ScrollViewer BorderThickness="0" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
						<ItemsPresenter Margin="{TemplateBinding Padding}"/>
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Name="Collections_FluidList" BasedOn="{StaticResource Style_ListBox_Fluid}"
		   TargetType="ListBox">
		<Setter Property="MaxHeight"
				Value="400" />
		<Setter Property="Background"
				Value="Transparent" />
	</Style>

	<Style x:Name="Databases_FluidList" BasedOn="{StaticResource Style_ListBox_Fluid}"
		   TargetType="ListBox">
		<Setter Property="Background"
				Value="Transparent" />
	</Style>

	<Style x:Key="Style_ListBoxItem_Index" TargetType="ListBoxItem">
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Margin="8" d:DesignWidth="241" d:DesignHeight="112">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
								</VisualState>
								<VisualState x:Name="SelectedUnfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Name="Style_ListBox_Indexes"
		   BasedOn="{StaticResource Style_ListBox_VerticalFluid}"
		   TargetType="ListBox">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource Style_ListBoxItem_Index}"/>
	</Style>

	<Style x:Key="Style_ListBoxItem_HeaderOptions" TargetType="ListBoxItem">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#02494949" Offset="0"/>
					<GradientStop Color="#0E494949" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="#19121212"/>
		<Setter Property="Margin" Value="4,0"/>
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Background="{TemplateBinding Background}">
						<Grid.Resources>
							<LinearGradientBrush x:Key="PressedBrush"  EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#0E494949" Offset="0"/>
								<GradientStop Color="#27494949" Offset="1"/>
							</LinearGradientBrush>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
							  <VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ActiveBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="3" Background="{StaticResource PressedBrush}"/>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="3" Background="{TemplateBinding Background}"/>
						<ContentPresenter
								  x:Name="contentPresenter"
								  Content="{TemplateBinding Content}"
								  ContentTemplate="{TemplateBinding ContentTemplate}"
								  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								  Margin="{TemplateBinding Padding}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Name="Style_ListBox_HeaderOptions"
		   TargetType="ListBox">
		<Setter Property="ItemsPanel">
		  <Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	  <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource Style_ListBoxItem_HeaderOptions}"/>
	</Style>
	
	<!-- Form Styles -->
	<Style x:Key="FormButton"
		   TargetType="Button">
		<Setter Property="Background"
				Value="{StaticResource ButtonBackgroundBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource ButtonForegroundBrush}" />
		<Setter Property="Padding"
				Value="4,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2">
										<VisualTransition.GeneratedEasingFunction>
											<CubicEase EasingMode="EaseInOut" />
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0"
														 To="1"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 Storyboard.TargetName="hover" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0"
														 To="1"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 Storyboard.TargetName="pressed" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0"
														 To="0.65"
														 Storyboard.TargetProperty="Opacity"
														 Storyboard.TargetName="disabled" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1">
										<VisualTransition.GeneratedEasingFunction>
											<CubicEase EasingMode="EaseInOut" />
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0"
														 To="1"
														 Storyboard.TargetProperty="Opacity"
														 Storyboard.TargetName="focus" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="3"
								Background="{StaticResource ButtonBackgroundBrush}" />
						<Border x:Name="hover"
								Background="{StaticResource ButtonForegroundPressedBrush}"
								Opacity="0"
								CornerRadius="3" />
						<Border x:Name="pressed"
								Background="{StaticResource ButtonForegroundHoverBrush}"
								Opacity="0"
								CornerRadius="3" />
						<ContentPresenter x:Name="contentPresenter"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  Content="{TemplateBinding Content}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						<Rectangle x:Name="disabled"
								   Fill="White"
								   IsHitTestVisible="false"
								   RadiusY="2"
								   RadiusX="2"
								   Opacity="0" />
						<Rectangle x:Name="focus"
								   IsHitTestVisible="false"
								   RadiusY="2"
								   RadiusX="2"
								   Stroke="{StaticResource AccentTextBrush}"
								   StrokeThickness="1"
								   Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="FontSize"
				Value="9.333" />
		<Setter Property="Margin"
				Value="0,2,2,2" />
	</Style>

	<Style TargetType="TextBox">
		<Setter Property="Background"
				Value="{StaticResource Brush_TextBox_Background}" />
		<Setter Property="Padding" Value="4,2,4,2" />
	</Style>

	<Style TargetType="Editors:LinqEditor">
		<Setter Property="Background"
				Value="{StaticResource Brush_TextBox_Background}" />
	</Style>
	<Style TargetType="Editors:JsonEditor">
		<Setter Property="Background"
				Value="{StaticResource Brush_TextBox_Background}" />
	</Style>
	<Style TargetType="Editors:QueryEditor">
		<Setter Property="Background"
				Value="{StaticResource Brush_TextBox_Background}" />
	</Style>
	<Style TargetType="Editors:XamlEditor">
		<Setter Property="Background"
				Value="{StaticResource Brush_TextBox_Background}" />
	</Style>

	<Style x:Key="PagePadding"
		   TargetType="Grid">
		<Setter Property="Margin"
				Value="58,0,58,0" />
	</Style>

	<Style x:Key="Style_Text_HeaderLink" TargetType="HyperlinkButton">
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Foreground" Value="#FF666666"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="16,6"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid Cursor="{TemplateBinding Cursor}"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="LinkStates">
								<VisualState x:Name="ActiveLink">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActiveBorder">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InactiveLink"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<Border x:Name="ActiveBorder" Visibility="Collapsed">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFC64266" Offset="0"/>
									<GradientStop Color="#FFBE214B" Offset="0.014"/>
									<GradientStop Color="#FF75213C" Offset="0.479"/>
									<GradientStop Color="#FF57001C" Offset="0.535"/>
									<GradientStop Color="#FF300116" Offset="0.986"/>
									<GradientStop Color="#FF5F404E" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
							
						</Border>
						<TextBlock x:Name="Content"
								   Text="{TemplateBinding Content}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   Margin="{TemplateBinding Padding}" />
							
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style_Separator_HeaderLink" TargetType="Controls:Separator">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Controls:Separator">
					<StackPanel Orientation="Horizontal">
						<Path Data="M0,0 L0,1" Stretch="Fill" UseLayoutRounding="False">
							<Path.Stroke>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFDEDEDE" Offset="0"/>
									<GradientStop Color="#FFDEDEDE" Offset="1"/>
								</LinearGradientBrush>
							</Path.Stroke>
						</Path>
						<Path Data="M0,0 L0,1" Stretch="Fill" UseLayoutRounding="False">
							<Path.Stroke>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="White" Offset="0"/>
									<GradientStop Color="White" Offset="1"/>
								</LinearGradientBrush>
							</Path.Stroke>
						</Path>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		
	<Thickness x:Key="Margin_MainPageLeftRight">15,0</Thickness>

	<Thickness x:Key="Margin_ContentPage">0,15,0,0</Thickness>
		
	<Style x:Key="Style_ComboBox_MouseOverOnlyChrome" TargetType="ComboBox">
		<Setter Property="Padding" Value="6,2,25,2"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Grid.Resources>
							<Style x:Name="comboToggleStyle1" TargetType="ToggleButton">
								<Setter Property="Foreground" Value="Black"/>
								<Setter Property="Background" Value="Transparent"/>
								<Setter Property="BorderThickness" Value="1"/>
								<Setter Property="Padding" Value="3"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ToggleButton">
											<Grid>
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal"/>
														<VisualState x:Name="MouseOver">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="contentPresenter">
																	<DiscreteObjectKeyFrame KeyTime="0">
																		<DiscreteObjectKeyFrame.Value>
																			<Visibility>Visible</Visibility>
																		</DiscreteObjectKeyFrame.Value>
																	</DiscreteObjectKeyFrame>
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Pressed">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="contentPresenter">
																	<DiscreteObjectKeyFrame KeyTime="0">
																		<DiscreteObjectKeyFrame.Value>
																			<Visibility>Visible</Visibility>
																		</DiscreteObjectKeyFrame.Value>
																	</DiscreteObjectKeyFrame>
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Disabled"/>
													</VisualStateGroup>
													<VisualStateGroup x:Name="CheckStates">
														<VisualState x:Name="Checked"/>
														<VisualState x:Name="Unchecked"/>
													</VisualStateGroup>
													<VisualStateGroup x:Name="FocusStates">
														<VisualState x:Name="Focused">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
																	<DiscreteObjectKeyFrame KeyTime="0">
																		<DiscreteObjectKeyFrame.Value>
																			<Visibility>Visible</Visibility>
																		</DiscreteObjectKeyFrame.Value>
																	</DiscreteObjectKeyFrame>
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Unfocused"/>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<Rectangle x:Name="Background" Fill="Transparent" RadiusY="3" RadiusX="3"/>
												<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
																  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																  Margin="{TemplateBinding Padding}" 
																  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																  Visibility="Collapsed"/>
												<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed"/>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Grid.Resources>
						
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
							  <VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="00:00:00" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="FocusedDropDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused"/>
								<VisualState x:Name="InvalidFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<Border x:Name="ContentPresenterBorder">
							<Grid>
								<ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle1}" 
											  VerticalAlignment="Stretch">
									<Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
										<Path.Fill>
											<SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
										</Path.Fill>
									</Path>
								</ToggleButton>
								<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
									<TextBlock Text=" "/>
								</ContentPresenter>
							</Grid>
						</Border>
						
						<Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
						
						<Popup x:Name="Popup">
							<Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFFFFF" Offset="0"/>
										<GradientStop Color="#FFFEFEFE" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
									<ItemsPresenter/>
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style_ComboBox_MutedChrome_Breadcrumb" TargetType="ComboBox">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="BorderBrush" Value="LightGray"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Grid.Resources>
							<Style x:Name="comboToggleStyle" TargetType="ToggleButton">
								<Setter Property="Foreground" Value="Black"/>
								<Setter Property="Background" Value="Transparent"/>
								<Setter Property="BorderBrush" Value="LightGray">
								</Setter>
								<Setter Property="BorderThickness" Value="1"/>
								<Setter Property="Padding" Value="2"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ToggleButton">
											<Grid>
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal"/>
														<VisualState x:Name="MouseOver">
															<Storyboard>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Pressed">
															<Storyboard>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Disabled" />
													</VisualStateGroup>
													<VisualStateGroup x:Name="CheckStates">
														<VisualState x:Name="Checked">
															<Storyboard>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Unchecked"/>
													</VisualStateGroup>
													<VisualStateGroup x:Name="FocusStates">
														<VisualState x:Name="Focused">
															
														</VisualState>
														<VisualState x:Name="Unfocused" />
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<Rectangle x:Name="Background" RadiusX="3" RadiusY="3" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}"/>
												<ContentPresenter
													  x:Name="contentPresenter"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													  Margin="{TemplateBinding Padding}"/>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To=".55"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="FocusedDropDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ContentPresenterBorder">
							<Grid>
								<ToggleButton x:Name="DropDownToggle" Style="{StaticResource comboToggleStyle}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0" HorizontalContentAlignment="Right" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
									<Path x:Name="BtnArrow" Height="4" Width="8" Stretch="Uniform" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Margin="0,0,6,0" HorizontalAlignment="Right">
										<Path.Fill>
											<SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
										</Path.Fill>
									</Path>
								</ToggleButton>
								<ContentPresenter x:Name="ContentPresenter" 
												Margin="{TemplateBinding Padding}"  
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
									<TextBlock Text=" " />
								</ContentPresenter>
							</Grid>
						</Border>
						<Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="White" Opacity="0" IsHitTestVisible="false" />
						
						<Popup x:Name="Popup">
							<Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Height="Auto" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFFFFF" Offset="0"/>
										<GradientStop Color="#FFFEFEFE" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
									<ItemsPresenter/>
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<ControlTemplate x:Key="ControlTemplate_ListBox_MainPageTabs" TargetType="ListBox">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			
			<Rectangle Height="4" Grid.Row="0" Fill="#FFA23D54"/>
			
			<Rectangle Height="4" Grid.Row="2" Fill="#FFA23D54"/>
			
			<Border BorderBrush="#FFE2E2E2" BorderThickness="1" Grid.Row="1" Margin="4,0,0,0" Background="#FFFBFBFB"/>
			
			<ItemsPresenter Grid.Row="1" Margin="0,10" />
		</Grid>
	</ControlTemplate>
	
	<Style x:Key="Style_ListBoxItem_MainPageTab" TargetType="ListBoxItem">
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="15,6,0,6"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Margin="0,6,0,0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="border">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
															<GradientStop Color="#FF9D2144" Offset="0.026"/>
															<GradientStop Color="#FF7C223E" Offset="0.921"/>
														</LinearGradientBrush>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<SolidColorBrush Color="White"/>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Path Data="M0,3 L3,0 L3,3 L0,3 z" Fill="Black" HorizontalAlignment="Left" Margin="0,-4,0,0.125" Stretch="Fill" Stroke="Black" UseLayoutRounding="False" VerticalAlignment="Top" StrokeStartLineCap="Square" Width="5" Height="5"/>
						<Border x:Name="border" BorderBrush="Black">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="Gainsboro" Offset="0.054"/>
									<GradientStop Color="#FFCACACA" Offset="0.929"/>
								</LinearGradientBrush>
							</Border.Background>
							<ContentControl x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}"/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="#FF666666"/>
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="14.667"/>
		
	</Style>
		
	<Style x:Key="Style_ListBoxItem_Document" TargetType="ListBoxItem">
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="15,6,60,6"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Margin="8" d:DesignWidth="241" d:DesignHeight="112">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimation Duration="0:0:0.05"
														To="{StaticResource Color_Contrast}"
														Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														Storyboard.TargetName="InnerMargin"
														d:IsOptimized="True" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="OuterBorder" BorderThickness="1" BorderBrush="#CBCBCB">
							<Border.Effect>
								<DropShadowEffect Opacity="0.28"
														  BlurRadius="7"
														  ShadowDepth="1"
														  Direction="0" />
							</Border.Effect>
							<Border.CacheMode>
								<BitmapCache/>
							</Border.CacheMode>
						</Border>
						<Border x:Name="InnerMargin" Background="White" Margin="1">
						<Border x:Name="border" BorderBrush="Black" Margin="3" Padding="4,0,0,0">
						  <Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							  <GradientStop Color="#FFF6F6F3" Offset="0"/>
							  <GradientStop Color="#FFF6F6F3" Offset="1"/>
							</LinearGradientBrush>
						  </Border.Background>
						  <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						</Border>
					  </Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>

	<Style x:Key="Style_ListBoxItem_Database" TargetType="ListBoxItem">
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="15,6,60,6"/>
		<Setter Property="Width" Value="200"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Margin="8" d:DesignWidth="241" d:DesignHeight="112">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
								</VisualState>
								<VisualState x:Name="Disabled">
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimation Duration="0:0:0.05" To="{StaticResource Color_Contrast}" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="OuterBorder" d:IsOptimized="True"/>
										<ColorAnimation Duration="0:0:0.05" To="{StaticResource Color_Contrast}" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="OuterBorder" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0:0:0.05" To="1" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="OuterBorder" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="OuterBorder" BorderThickness="1" Margin="0" CornerRadius="4">
							<Border.BorderBrush>
								<SolidColorBrush Color="Transparent"/>
							</Border.BorderBrush>
							<Border.Effect>
								<DropShadowEffect Opacity="0.28" BlurRadius="7" ShadowDepth="1" Direction="0"/>
							</Border.Effect>
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFFEFEFE" Offset="0.025"/>
									<GradientStop Color="#FFF1F1F1" Offset="0.825"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Name="DocumentList"
		   TargetType="ListBox">
		<Setter Property="ItemsPanel"
				Value="{StaticResource FluidWrapPanel}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="SelectionMode"
				Value="Extended" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource Style_ListBoxItem_Document}"/>
	</Style>
	
	<Style x:Key="Style_ListBox_MainTabs" TargetType="ListBox">
		<Setter Property="Template" Value="{StaticResource ControlTemplate_ListBox_MainPageTabs}"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource Style_ListBoxItem_MainPageTab}"/>
	</Style>
	
	<Style x:Key="Style_Button" TargetType="Button">
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="FontFamily" Value="Tahoma"/>
		<Setter Property="MinWidth" Value="40"/>
		<Setter Property="Padding" Value="4,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border CornerRadius="17" Height="34" BorderBrush="#FFDFDAD5" BorderThickness="1">
						<Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FFE7E2E8" Offset="0"/>
								<GradientStop Color="#FFC7BFB7" Offset="1"/>
							</LinearGradientBrush>
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="border">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFFAFAFA" Offset="0.044"/>
														<GradientStop Color="LightGray" Offset="0.89"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="innermost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFFAFAFA" Offset="0.89"/>
														<GradientStop Color="LightGray" Offset="0.044"/>
													</LinearGradientBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border"  CornerRadius="13" Height="26" BorderThickness="0" Margin="3,0" VerticalAlignment="Center" BorderBrush="Gainsboro">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFFAFAFA" Offset="0.89"/>
									<GradientStop Color="LightGray" Offset="0.044"/>
								</LinearGradientBrush>
							</Border.Background>
							<Border x:Name="innermost" CornerRadius="12" BorderThickness="0" Margin="1" BorderBrush="Gainsboro">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFAFAFA" Offset="0.044"/>
										<GradientStop Color="LightGray" Offset="0.89"/>
									</LinearGradientBrush>
								</Border.Background>
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
							</Border>
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="#FF666666"/>
	</Style>

	<!-- Link Style -->
	<Style x:Key="Style_Link_Command" TargetType="HyperlinkButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="#FFA1A1A1"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid x:Name="ButtonGrid" Cursor="{TemplateBinding Cursor}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.95"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.8"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="LinkStates">
								<VisualState x:Name="ActiveLink">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InactiveLink"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.35"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusX)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusY)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="FocusVisualElement" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1"/>
						<Border x:Name="ActiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0" Margin="{TemplateBinding Padding}"/>
						<Border x:Name="ContentBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Opacity="1" Margin="{TemplateBinding Padding}">
							<TextBlock x:Name="Content" Foreground="Black" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<Border x:Name="InteractiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" BorderThickness="1,1,1,1" Opacity="0" CornerRadius="1,1,1,1" Margin="{TemplateBinding Padding}"/>
						<Border x:Name="InteractiveElementBorder" Visibility="Collapsed" Margin="{TemplateBinding Padding}"  MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
							<TextBlock x:Name="InteractiveElement" Foreground="{StaticResource Brush_ContrastColor}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<TextBlock x:Name="DisabledOverlay" Text="{TemplateBinding Content}" Foreground="#FFAAAAAA" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontWeight" Value="Normal"/>
	</Style>

	<Style x:Key="Style_Link_Shortcut" TargetType="HyperlinkButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="#FF707DC2"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid x:Name="ButtonGrid" Cursor="{TemplateBinding Cursor}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.95"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.8"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="LinkStates">
								<VisualState x:Name="ActiveLink">
									<Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InactiveLink"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.35"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusX)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusY)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="FocusVisualElement" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1"/>
						<Border MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Padding}"/>
						<Border x:Name="InteractiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" BorderThickness="1,1,1,1" Opacity="0" CornerRadius="1,1,1,1" Margin="{TemplateBinding Padding}"/>
						
						<Grid Grid.Column="1" Margin="4,0,0,0">
							<Border x:Name="ContentBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Opacity="1" Margin="{TemplateBinding Padding}">
								<ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							</Border>
							
							<Border x:Name="InteractiveElementBorder" Visibility="Collapsed" Margin="{TemplateBinding Padding}">
								<TextBlock x:Name="InteractiveElement" Foreground="{StaticResource Brush_ContrastColor}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"
										   TextDecorations="Underline"/>
							</Border>
							<TextBlock x:Name="DisabledOverlay" Text="{TemplateBinding Content}" Foreground="#FFAAAAAA" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
							</Grid> 
						</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontWeight" Value="Normal"/>
	</Style>

	<Style x:Key="Style_Link_DrillDown" TargetType="HyperlinkButton" BasedOn="{StaticResource Style_Link_Command}">
		<Setter Property="Foreground" Value="Black"/>
	</Style>
	
	<Style x:Key="Style_ScrollViewer_Unintrusive" TargetType="ScrollViewer">
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Background" Value="Transparent"/>
	</Style>
	
	<Style x:Key="Style_ScrollViewer_SlimScrollbars" TargetType="ScrollViewer">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
						<Grid Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
							<Rectangle Grid.Column="1" Fill="#FFE9EEF4" Grid.Row="1"/>
							<ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Margin="0,-1,-1,-1" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="9" Style="{StaticResource Style_ScrollBar_Slim}"/>
							<ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="9" Style="{StaticResource Style_ScrollBar_Slim}" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Margin="-1,0,-1,-1" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="Style_TextBox_ReadOnly_LogsDetails"
		   TargetType="TextBox">
		<Setter Property="IsReadOnly" Value="True"/>
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF99C1E2" Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ReadOnly">
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
							<Grid>
								<Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="Transparent">
									<ScrollViewer x:Name="ContentElement" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False"/>
								</Border>
							</Grid>
						</Border>
						<Border x:Name="DisabledVisualElement" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" IsHitTestVisible="False"/>
						<Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" Margin="1" Opacity="0" IsHitTestVisible="False"/>
						<Border x:Name="ValidationErrorElement" BorderThickness="1" CornerRadius="1" BorderBrush="#FFDB000C" Visibility="Collapsed">
							<Grid Width="12" Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
								<Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
								<Path Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style_HeaderedContentControl" TargetType="toolkit:HeaderedContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="toolkit:HeaderedContentControl">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto" MinHeight="40"/>
						</Grid.RowDefinitions>
						<Border BorderThickness="1" CornerRadius="4" Grid.RowSpan="2" BorderBrush="#FFEAE7E4"/>
						<Border BorderThickness="0" Margin="1" CornerRadius="4,4,0,0" Background="{StaticResource Brush_HeaderBackground}">
						</Border>
						<ContentPresenter Grid.Row="0" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
						<ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style_HeaderedContentControl_Stretch" TargetType="toolkit:HeaderedContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="toolkit:HeaderedContentControl">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*" MinHeight="40"/>
						</Grid.RowDefinitions>
						<Border BorderThickness="1" CornerRadius="4" Grid.RowSpan="2" BorderBrush="#FFEAE7E4"/>
						<Border BorderThickness="0" Margin="1" CornerRadius="4,4,0,0" Background="{StaticResource Brush_HeaderBackground}">
						</Border>
						<ContentPresenter Grid.Row="0" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
						<ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style_TextBlock_Breadcrumb" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource Brush_ContrastColor}"/>
		<Setter Property="FontSize" Value="14"/>
	</Style>


	<Style x:Key="Style_TextBlock_InlineSubHeader" TargetType="TextBlock">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>

	<Style x:Key="Style_TextBlock_GroupHeader" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource Brush_ContrastColor}"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>
	
	<Style x:Key="Style_TextBlock_PagePartHeader" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource Brush_ContrastColor}"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<Style x:Key="Style_TextBlock_FieldName" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource Brush_ContrastColor}"/>
		<Setter Property="FontStyle" Value="Italic"/>
	</Style>

	<Style x:Key="Style_TextBlock_Breadcrumb_Initial" TargetType="TextBlock">
		<Setter Property="Foreground" Value="#FFA1A1A1"/>
		<Setter Property="FontSize" Value="14"/>
	</Style>
	
	<Style x:Key="Style_Link_Breadcrumb_Initial" TargetType="HyperlinkButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="#FFA1A1A1"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid x:Name="ButtonGrid" Cursor="{TemplateBinding Cursor}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.95"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.8"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="LinkStates">
								<VisualState x:Name="ActiveLink">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InactiveLink"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.35"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusX)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusY)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="FocusVisualElement" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1"/>
						<Border x:Name="ActiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0" Margin="{TemplateBinding Padding}"/>
						<Border x:Name="ContentBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Opacity="1" Margin="{TemplateBinding Padding}">
							<ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
						<Border x:Name="InteractiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" BorderThickness="1,1,1,1" Opacity="0" CornerRadius="1,1,1,1" Margin="{TemplateBinding Padding}"/>
						<Border x:Name="InteractiveElementBorder" Visibility="Collapsed" Margin="{TemplateBinding Padding}">
							<TextBlock x:Name="InteractiveElement" Foreground="{StaticResource Brush_ContrastColor}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
						<TextBlock x:Name="DisabledOverlay" Text="{TemplateBinding Content}" Foreground="#FFAAAAAA" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontWeight" Value="Normal"/>
	</Style>
	<ControlTemplate x:Key="ControlTemplate_Button" TargetType="Button"/>
	
	<Style x:Key="Style_Button_MouseOverChrome" TargetType="ButtonBase">
	  <Setter Property="Background">
		<Setter.Value>
			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
				<GradientStop Color="#02494949" Offset="0"/>
				<GradientStop Color="#0E494949" Offset="1"/>
			</LinearGradientBrush>
		</Setter.Value>
	  </Setter>
	  <Setter Property="Foreground" Value="#FF000000"/>
	  <Setter Property="Padding" Value="3"/>
	  <Setter Property="BorderThickness" Value="1"/>
	  <Setter Property="BorderBrush" Value="#19121212"/>
	  <Setter Property="Template">
		  <Setter.Value>
			  <ControlTemplate TargetType="ButtonBase">
				  <Grid>
					<Grid.Resources>
						<LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#0C2D2D2D" Offset="0"/>
							<GradientStop Color="#1A4D4D4D" Offset="1"/>
						</LinearGradientBrush>             	
					</Grid.Resources>
					  <VisualStateManager.VisualStateGroups>
						  <VisualStateGroup x:Name="CommonStates">
							  <VisualState x:Name="Normal"/>
							  <VisualState x:Name="MouseOver">
								<Storyboard>
									<DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
								</Storyboard>
							  </VisualState>
							  <VisualState x:Name="Pressed">
								<Storyboard>
									<DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									<ObjectAnimationUsingKeyFrames Duration="0:0:0.01" Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="border" d:IsOptimized="True">
										<DiscreteObjectKeyFrame KeyTime="0:0:0.01" Value="{StaticResource PressedBrush}"/>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							  </VisualState>
							  <VisualState x:Name="Disabled">
								  <Storyboard>
									  <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
								  </Storyboard>
							  </VisualState>
						  </VisualStateGroup>
						  <VisualStateGroup x:Name="FocusStates">
							  <VisualState x:Name="Focused"/>
							  <VisualState x:Name="Unfocused" />
						  </VisualStateGroup>
					  </VisualStateManager.VisualStateGroups>
					  <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="3" Background="{TemplateBinding Background}"/>
					<ContentPresenter
						x:Name="contentPresenter"
						Content="{TemplateBinding Content}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						Margin="{TemplateBinding Padding}"/>
					<Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
				  </Grid>
			  </ControlTemplate>
		  </Setter.Value>
	  </Setter>
	</Style>

	<Style x:Key="Style_Link_MouseOverChrome" TargetType="HyperlinkButton">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#02494949" Offset="0"/>
					<GradientStop Color="#0E494949" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="#19121212"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid>
						<Grid.Resources>
							<LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#0C2D2D2D" Offset="0"/>
								<GradientStop Color="#1A4D4D4D" Offset="1"/>
							</LinearGradientBrush>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0.01" Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="border" d:IsOptimized="True">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.01" Value="{StaticResource PressedBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To=".55"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="LinkStates">
								<VisualState x:Name="ActiveLink">
									<Storyboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActiveBorder" d:IsOptimized="True"/>
											<ObjectAnimationUsingKeyFrames Duration="0:0:0.01" Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="ActiveBorder" d:IsOptimized="True">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.01" Value="{StaticResource PressedBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InactiveLink"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ActiveBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="3" Background="{TemplateBinding Background}"/>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="3" Background="{TemplateBinding Background}"/>
						<ContentPresenter
							x:Name="contentPresenter"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Chromeless DataGrid styles -->
	<Style x:Key="Style_DataGrid_NoChrome_NoHeader" TargetType="sdk:DataGrid">
		<Setter Property="RowBackground" Value="Transparent" />
		<Setter Property="AlternatingRowBackground" Value="Transparent" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HeadersVisibility" Value="Column" />
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="SelectionMode" Value="Extended" />
		<Setter Property="CanUserReorderColumns" Value="False" />
		<Setter Property="CanUserResizeColumns" Value="True" />
		<Setter Property="CanUserSortColumns" Value="False" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0" />       
		<Setter Property="GridLinesVisibility" Value="None" />
		<Setter Property="HorizontalGridLinesBrush" Value="#FFC9CACA" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="VerticalGridLinesBrush" Value="#FFC9CACA" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="sdk:DataGrid">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
							<Grid Name="Root" Background="{TemplateBinding Background}">
								<Grid.Resources>
									<Style TargetType="sdk:DataGridRow">
										<Setter Property="IsTabStop" Value="False" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="sdk:DataGridRow">
													<sdk:DataGridFrozenGrid Name="Root">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="NormalAlternatingRow">
																</VisualState>
																<VisualState x:Name="MouseOver">
																</VisualState>
																<VisualState x:Name="NormalSelected">
																</VisualState>
																<VisualState x:Name="MouseOverSelected">
																</VisualState>
																<VisualState x:Name="UnfocusedSelected">
																</VisualState>
															</VisualStateGroup>
															<VisualStateGroup x:Name="ValidationStates">
																<VisualState x:Name="Valid"/>
																<VisualState x:Name="Invalid">
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid.RowDefinitions>
															<RowDefinition Height="Auto"/>
														</Grid.RowDefinitions>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="*"/>
														</Grid.ColumnDefinitions>
														<Grid.Resources>
															<Style TargetType="sdk:DataGridCell">
																<Setter Property="Background" Value="Transparent" />
																<Setter Property="HorizontalContentAlignment" Value="Stretch" />
																<Setter Property="VerticalContentAlignment" Value="Stretch" />
																<Setter Property="IsTabStop" Value="False" />
																<Setter Property="Template">
																	<Setter.Value>
																		<ControlTemplate TargetType="sdk:DataGridCell">
																			<Grid Name="Root" Background="{TemplateBinding Background}">
																				<VisualStateManager.VisualStateGroups>
																					<VisualStateGroup x:Name="CurrentStates">
																						<VisualState x:Name="Regular" />
																						<VisualState x:Name="Current">
																						</VisualState>
																					</VisualStateGroup>
																					<VisualStateGroup x:Name="ValidationStates">
																						<VisualState x:Name="Valid"/>
																						<VisualState x:Name="Invalid">
																						</VisualState>
																					</VisualStateGroup>
																				</VisualStateManager.VisualStateGroups>

																				<Grid.ColumnDefinitions>
																					<ColumnDefinition />
																					<ColumnDefinition Width="Auto" />
																				</Grid.ColumnDefinitions>

																				<ContentPresenter
																					Content="{TemplateBinding Content}"
																					ContentTemplate="{TemplateBinding ContentTemplate}"
																					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																					Margin="{TemplateBinding Padding}" />

																			</Grid>
																		</ControlTemplate>
																	</Setter.Value>
																</Setter>
															</Style>
														</Grid.Resources>
														<sdk:DataGridCellsPresenter Grid.Column="1" Name="CellsPresenter" sdk:DataGridFrozenGrid.IsFrozen="True"  />
													</sdk:DataGridFrozenGrid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>

									<Style TargetType="sdk:DataGridRowGroupHeader">
										<Setter Property="Cursor" Value="Arrow" />
										<Setter Property="IsTabStop" Value="False" />
										<Setter Property="Background" Value="Transparent" />
										<Setter Property="Height" Value="20"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="sdk:DataGridRowGroupHeader">
													<sdk:DataGridFrozenGrid Name="Root" Background="{TemplateBinding Background}">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CurrentStates">
																<VisualState x:Name="Regular"/>
																<VisualState x:Name="Current">
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<sdk:DataGridFrozenGrid.Resources>
														</sdk:DataGridFrozenGrid.Resources>

														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="Auto" />
															<ColumnDefinition Width="Auto" />
															<ColumnDefinition Width="Auto" />
															<ColumnDefinition Width="Auto" />
															<ColumnDefinition/>
														</Grid.ColumnDefinitions>
														<Grid.RowDefinitions>
															<RowDefinition Height="Auto"/>
															<RowDefinition/>
															<RowDefinition Height="Auto"/>
														</Grid.RowDefinitions>

														<TextBlock Margin="4,0,0,0" Text="{Binding Name}" FontWeight="Bold"/>

 
													</sdk:DataGridFrozenGrid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Grid.Resources>

								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>


								<sdk:DataGridRowsPresenter Name="RowsPresenter" Grid.ColumnSpan="2" Grid.Row="1" />
								<ScrollBar Name="VerticalScrollbar" Orientation="Vertical" Grid.Column="2" Grid.Row="1" Width="18" Margin="0,-1,-1,-1"/>

								<Grid Grid.Column="1" Grid.Row="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Rectangle Name="FrozenColumnScrollBarSpacer" />
									<ScrollBar Name="HorizontalScrollbar" Grid.Column="1" Orientation="Horizontal" Height="18" Margin="-1,0,-1,-1"/>
								</Grid>

							</Grid>
						</Border>
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" CornerRadius="2" Background="#8CFFFFFF" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

 <!--************************************************-->
 <!-- Default Data Grid Styles -->
 <!--************************************************-->   
 <Style TargetType="sdk:DataGrid">
		<Setter Property="RowBackground" Value="#FFF8F8F8" />
		<Setter Property="AlternatingRowBackground" Value="#00FFFFFF" />
		<Setter Property="Background" Value="#FCFDFDFD" />
		<Setter Property="HeadersVisibility" Value="Column" />
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="SelectionMode" Value="Extended" />
		<Setter Property="CanUserReorderColumns" Value="True" />
		<Setter Property="CanUserResizeColumns" Value="True" />
		<Setter Property="CanUserSortColumns" Value="True" />
		<Setter Property="AutoGenerateColumns" Value="True" />
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="BorderBrush" Value="#FFEAE7E4"/>
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="DragIndicatorStyle">
			<Setter.Value>
				<!-- TODO: Change the TargetType to Control when the fix Jolt bugs 18719 is verified -->
				<Style TargetType="ContentControl">
					<Setter Property="Foreground" Value="#7FFFFFFF" />
					<Setter Property="Template">
						<Setter.Value>
							<!-- TODO: Change the TargetType to Control when the fix Jolt bugs 18719 is verified -->
							<ControlTemplate TargetType="ContentControl">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="SortStates">
											<VisualState x:Name="Unsorted" />
											<VisualState x:Name="SortAscending">
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="SortDescending">
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
													<DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-.9"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>

									<Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Fill="#66808080" Grid.ColumnSpan="2" />

									<Rectangle x:Name="BackgroundGradient" Stretch="Fill" Grid.ColumnSpan="2" Opacity="0" >
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
												<GradientStop Color="#FFFFFFFF" Offset="0.015" />
												<GradientStop Color="#F9FFFFFF" Offset="0.375" />
												<GradientStop Color="#E5FFFFFF" Offset="0.6" />
												<GradientStop Color="#C6FFFFFF" Offset="1" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>

									<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>

										<ContentPresenter Content="{TemplateBinding Content}"/>

										<Path Grid.Column="1" Name="SortIcon" Fill="#7FFFFFFF" RenderTransformOrigin=".5,.5" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" Stretch="Uniform" Width="8" Margin="4,0,0,0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
											<Path.RenderTransform>
												<ScaleTransform ScaleX=".9" ScaleY=".9" />
											</Path.RenderTransform>
										</Path>
									</Grid>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="DropLocationIndicatorStyle">
			<Setter.Value>
				<Style TargetType="ContentControl">
					<Setter Property="Background" Value="#FF3F4346"/>
					<Setter Property="Width" Value="2"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ContentControl">
								<Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="GridLinesVisibility" Value="Vertical" />
		<Setter Property="HorizontalGridLinesBrush" Value="#FFEAE7E4" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="VerticalGridLinesBrush" Value="#FFEAE7E4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="sdk:DataGrid">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<Grid Name="Root" Background="{TemplateBinding Background}">
								<Grid.Resources>
									<!--Start: TopLeftHeaderTemplate-->
									<ControlTemplate x:Key="TopLeftHeaderTemplate" TargetType="sdk:DataGridColumnHeader">
										<Grid Name="Root">
											<Grid.RowDefinitions>
												<RowDefinition/>
												<RowDefinition/>
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<Border BorderThickness="0,0,1,0" BorderBrush="#FFEAE7E4" Grid.RowSpan="2">
												<Rectangle Stretch="Fill" StrokeThickness="1">
													<Rectangle.Fill>
														<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
															<GradientStop Color="#C5F7F7F7" Offset="0.049"/>
															<GradientStop Color="#C1E8E8E8" Offset="0.74"/>
														</LinearGradientBrush>
													</Rectangle.Fill>
												</Rectangle>
											</Border>
											<Rectangle VerticalAlignment="Bottom" Width="Auto" StrokeThickness="1" Height="1" Fill="#FFDBDCDC" Grid.RowSpan="2"/>
										</Grid>
									</ControlTemplate>
									<!--End: TopLeftHeaderTemplate-->

									<!--Start: TopRightHeaderTemplate-->
									<ControlTemplate x:Key="TopRightHeaderTemplate" TargetType="sdk:DataGridColumnHeader">
										<Grid Name="RootElement">
											<Grid.RowDefinitions>
												<RowDefinition/>
												<RowDefinition/>
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<Border BorderThickness="1,0,0,0" BorderBrush="#FFEAE7E4" Grid.RowSpan="2">
												<Rectangle Stretch="Fill">
													<Rectangle.Fill>
														<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
															<GradientStop Color="#C5F7F7F7" Offset="0.049"/>
															<GradientStop Color="#C1E8E8E8" Offset="0.74"/>
														</LinearGradientBrush>
													</Rectangle.Fill>
												</Rectangle>
											</Border>
										</Grid>
									</ControlTemplate>
									<!--End: TopRightHeaderTemplate-->
								</Grid.Resources>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition/>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<sdk:DataGridColumnHeader Name="TopLeftCornerHeader" Template="{StaticResource TopLeftHeaderTemplate}" Width="22" />
								<sdk:DataGridColumnHeadersPresenter Name="ColumnHeadersPresenter" Grid.Column="1"/>
								<sdk:DataGridColumnHeader Name="TopRightCornerHeader" Grid.Column="2" Template="{StaticResource TopRightHeaderTemplate}" />
								<Rectangle Name="ColumnHeadersAndRowsSeparator" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Width="Auto" StrokeThickness="1" Height="1" Fill="#FFC9CACA"/>

								<sdk:DataGridRowsPresenter Name="RowsPresenter" Grid.ColumnSpan="2" Grid.Row="1" />
								<Rectangle Name="BottomRightCorner" Fill="#FFE9EEF4" Grid.Column="2" Grid.Row="2" />
								<Rectangle Name="BottomLeftCorner" Fill="#FFE9EEF4" Grid.Row="2" Grid.ColumnSpan="2" />
								<ScrollBar Name="VerticalScrollbar" Orientation="Vertical" Grid.Column="2" Grid.Row="1" Width="18" Margin="0,-1,-1,-1"/>

								<Grid Grid.Column="1" Grid.Row="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Rectangle Name="FrozenColumnScrollBarSpacer" />
									<ScrollBar Name="HorizontalScrollbar" Grid.Column="1" Orientation="Horizontal" Height="18" Margin="-1,0,-1,-1"/>
								</Grid>

							</Grid>
						</Border>
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" CornerRadius="2" Background="#8CFFFFFF" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="sdk:DataGridRow">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="sdk:DataGridRow">
					<sdk:DataGridFrozenGrid Name="Root">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="NormalAlternatingRow">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To=".5"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NormalSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOverSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UnfocusedSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FFE1E7EC"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UnfocusedEditing"/>
								<VisualState x:Name="NormalEditing"/>
								<VisualState x:Name="MouseOverUnfocusedEditing"/>
								<VisualState x:Name="MouseOverEditing"/>
								<VisualState x:Name="MouseOverUnfocusedSelected"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="Invalid">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="InvalidVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>

						<Grid.Resources>
							<Storyboard x:Key="DetailsVisibleTransition">
								<DoubleAnimation Storyboard.TargetName="DetailsPresenter" Storyboard.TargetProperty="ContentHeight" Duration="00:00:0.1" />
							</Storyboard>
						</Grid.Resources>

						<Rectangle x:Name="BackgroundRectangle" Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0" Fill="#FFC4C4C4"/>
						<Rectangle x:Name="InvalidVisualElement" Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0" Fill="#FFF7D8DB"/>

						<sdk:DataGridRowHeader Grid.RowSpan="3" Name="RowHeader" sdk:DataGridFrozenGrid.IsFrozen="True" />
						<sdk:DataGridCellsPresenter Grid.Column="1" Name="CellsPresenter" sdk:DataGridFrozenGrid.IsFrozen="True" />
						<sdk:DataGridDetailsPresenter Grid.Row="1" Grid.Column="1" Name="DetailsPresenter" />
						<Rectangle Grid.Row="2" Grid.Column="1" Name="BottomGridLine" HorizontalAlignment="Stretch" Height="1" />
					</sdk:DataGridFrozenGrid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="sdk:DataGridRowHeader">
		<Setter Property="Background" Value="#99E9EEF4" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="SeparatorBrush" Value="#FFFFFFFF" />
		<Setter Property="SeparatorVisibility" Value="Collapsed"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="sdk:DataGridRowHeader">
					<Grid Name="Root">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="#99D5EAF1"/>
										<DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
										<DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOverCurrentRowSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="#FFD5EAF1"/>
										<DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
										<DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NormalCurrentRow">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
										<DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NormalSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="#FFD5EAF1"/>
										<DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
										<DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NormalEditingRow">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="#FFD5EAF1"/>
										<DoubleAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
										<DoubleAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="RowValid"/>
								<VisualState x:Name="RowInvalid">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
										<DoubleAnimation Storyboard.TargetName="RowInvalidVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
										<ColorAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" Duration="0" To="#FFDC000C"/>
										<ColorAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" Duration="0" To="#FFDC000C"/>
										<ColorAnimation Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" Duration="0" To="#FFDC000C"/>
										<ColorAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" Duration="0" To="#FFDC000C"/>
										<ColorAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" Duration="0" To="#FFDC000C"/>
										<ColorAnimation Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" Duration="0" To="#FFDC000C"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition/>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>

						<Border BorderBrush="#FFFFFFFF" BorderThickness="1,0,1,0" Grid.RowSpan="3" Grid.ColumnSpan="2">
							<Grid Background="{TemplateBinding Background}">
								<Rectangle x:Name="RowInvalidVisualElement" Stretch="Fill" Grid.RowSpan="3" Grid.ColumnSpan="2" Fill="#FFF7D8DB" Opacity="0" />
								<Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Grid.RowSpan="3" Grid.ColumnSpan="2" Fill="Transparent" />
							</Grid>
						</Border>
						<Rectangle Name="HorizontalSeparator" Grid.ColumnSpan="2" Grid.Row="2" Height="1" Margin="1,0,1,0" HorizontalAlignment="Stretch" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" />

						<ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.RowSpan="2" />

						<Path Name="CurrentRowGlyph" VerticalAlignment="Center" HorizontalAlignment="Center" Width="6" Height="10"  Margin="8,0,8,0" Grid.RowSpan="2" Stretch="Fill" Opacity="0" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z ">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0,-.15" EndPoint="0,1.75">
									<GradientStop Color="#FF84E3FF" Offset="0"/>
									<GradientStop Color="#FF6ABFD8" Offset="0.5"/>
									<GradientStop Color="#FF5297AB" Offset="1"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>

						<Path Name="EditingRowGlyph" VerticalAlignment="Center" HorizontalAlignment="Center" Width="6" Height="10"  Margin="8,0,8,0" Grid.RowSpan="2" Stretch="Fill" Opacity="0" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z ">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0,-.15" EndPoint="0,1.75">
									<GradientStop Color="#FF84E3FF" Offset="0"/>
									<GradientStop Color="#FF6ABFD8" Offset="0.5"/>
									<GradientStop Color="#FF5297AB" Offset="1"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="sdk:DataGridRowGroupHeader">
		<Setter Property="Cursor" Value="Arrow" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Background" Value="#FFE4E8EA" />
		<Setter Property="Height" Value="20"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="sdk:DataGridRowGroupHeader">
					<sdk:DataGridFrozenGrid Name="Root" Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CurrentStates">
								<VisualState x:Name="Regular"/>
								<VisualState x:Name="Current">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<sdk:DataGridFrozenGrid.Resources>
							<ControlTemplate x:Key="ToggleButtonTemplate" TargetType="ToggleButton">
								<Grid Background="Transparent">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<ColorAnimation Storyboard.TargetName="CollapsedArrow" Storyboard.TargetProperty="(Stroke).Color" Duration="0" To="#FF6DBDD1"/>
													<ColorAnimation Storyboard.TargetName="ExpandedArrow" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="#FF6DBDD1"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<ColorAnimation Storyboard.TargetName="CollapsedArrow" Storyboard.TargetProperty="(Stroke).Color" Duration="0" To="#FF6DBDD1"/>
													<ColorAnimation Storyboard.TargetName="ExpandedArrow" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="#FF6DBDD1"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0" Storyboard.TargetName="CollapsedArrow" Storyboard.TargetProperty="Opacity" To=".5"/>
													<DoubleAnimation Duration="0" Storyboard.TargetName="ExpandedArrow" Storyboard.TargetProperty="Opacity" To=".5"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="CheckStates">
											<VisualState x:Name="Checked" />
											<VisualState x:Name="Unchecked">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CollapsedArrow" Storyboard.TargetProperty="Visibility">
														<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
													</ObjectAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandedArrow" Storyboard.TargetProperty="Visibility">
														<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>

									<Path Stretch="Uniform" Data="F1 M 0,0 L 0,1 L .6,.5 L 0,0 Z" Width="5" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="CollapsedArrow" Visibility="Collapsed" Stroke="#FF414345"/>
									<Path Stretch="Uniform" Data="F1 M 0,1 L 1,1 L 1,0 L 0,1 Z" Width="6" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ExpandedArrow" Fill="#FF414345"/>
								</Grid>
							</ControlTemplate>
						</sdk:DataGridFrozenGrid.Resources>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<Rectangle Grid.Column="1" Grid.ColumnSpan="5" Fill="#FFFFFFFF" Height="1"/>
						<Rectangle Grid.Column="1" Grid.Row="1" Name="IndentSpacer" />
						<ToggleButton Grid.Column="2" Grid.Row="1" Name="ExpanderButton" Height="15" Width="15" IsTabStop="False" Template="{StaticResource ToggleButtonTemplate}" Margin="2,0,0,0"/>

						<StackPanel Grid.Column="3" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,1,0,1">
							<TextBlock x:Name="PropertyNameElement" Margin="4,0,0,0" Visibility="{TemplateBinding PropertyNameVisibility}"/>
							<TextBlock Margin="4,0,0,0" Text="{Binding Name}" />
							<TextBlock x:Name="ItemCountElement" Margin="4,0,0,0" Visibility="{TemplateBinding ItemCountVisibility}"/>
						</StackPanel>

						<Rectangle Grid.Column="1" Grid.ColumnSpan="5" Fill="#FFD3D3D3" Height="1" Grid.Row="2"/>
						<Rectangle Name="FocusVisual" Grid.Column="1" Grid.ColumnSpan="4" Grid.RowSpan="3" Stroke="#FF6DBDD1" StrokeThickness="1" HorizontalAlignment="Stretch" 
							   VerticalAlignment="Stretch" IsHitTestVisible="false" Opacity="0" />
						<sdk:DataGridRowHeader Name="RowHeader" Grid.RowSpan="3" sdk:DataGridFrozenGrid.IsFrozen="True"/>

					</sdk:DataGridFrozenGrid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="sdk:DataGridColumnHeader">
		<Setter Property="Foreground" Value="#FFA2183E" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="SeparatorBrush" Value="#FFEAE7E4" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="sdk:DataGridColumnHeader">
					<Grid Name="Root">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" To="#C1E8E8E8"/>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#C5F7F7F7"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" To="#C5D3D3D3"/>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#C6FFFFFF"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SortStates">
								<VisualState x:Name="Unsorted" />
								<VisualState x:Name="SortAscending">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SortDescending">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
										<DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-.9"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<Rectangle x:Name="BackgroundGradient" Stretch="Fill" Grid.ColumnSpan="2" >
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#C5F7F7F7" Offset="0.049"/>
									<GradientStop Color="#C1E8E8E8" Offset="0.74"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>

						<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<ContentPresenter Content="{TemplateBinding Content}"/>

							<Path Grid.Column="1" Name="SortIcon" Fill="#FF444444" RenderTransformOrigin=".5,.5" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" Stretch="Uniform" Width="8" Margin="4,0,0,0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
								<Path.RenderTransform>
									<ScaleTransform ScaleX=".9" ScaleY=".9" />
								</Path.RenderTransform>
							</Path>
						</Grid>

						<Rectangle Name="VerticalSeparator" Grid.Column="1" Width="1" VerticalAlignment="Stretch" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" />

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="sdk:DataGridCell">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="sdk:DataGridCell">
					<Grid x:Name="Root" Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CurrentStates">
								<VisualState x:Name="Regular" />
								<VisualState x:Name="Current">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="Invalid">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="InvalidVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
										<ColorAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="#FFFFFFFF"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<Rectangle x:Name="FocusVisual" Stroke="#FF9F2145" StrokeThickness="1" Fill="#66FFFFFF" HorizontalAlignment="Stretch" 
							VerticalAlignment="Stretch" IsHitTestVisible="false" Opacity="0" />

						<ContentPresenter
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}" />

						<Rectangle x:Name="InvalidVisualElement" IsHitTestVisible="False" StrokeThickness="1" Stroke="#FFDC000C" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0"/>

						<Rectangle x:Name="RightGridLine" Grid.Column="1" VerticalAlignment="Stretch" Width="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
<!--************************************************-->
<!-- End of Default Data Grid Styles -->
<!--************************************************-->  
	
	<Style x:Key="Style_GridSplitter_Transparent" TargetType="sdk:GridSplitter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="IsTabStop" Value="true" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="PreviewStyle">
			<Setter.Value>
				<Style TargetType="Control">
					<Setter Property="Background" Value="#FF868686" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="Control">
								<Grid x:Name="Root" Opacity=".5">

									<!-- Background -->
									<Rectangle Fill="{TemplateBinding Background}" />

									<!-- Horizontal Template -->
									<Grid x:Name="HorizontalTemplate" Height="6">
										<!-- Just show the faint gray grid splitter rectangle with no other details -->
									</Grid>

									<!-- Vertical Template -->
									<Grid x:Name="VerticalTemplate" Visibility="Collapsed" Width="6">
										<!-- Just show the faint gray grid splitter rectangle with no other details -->
									</Grid>

								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="sdk:GridSplitter">
					<Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">

						<!-- VSM -->
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Background -->
						<Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0" />

						<!-- Horizontal Template -->
						<Grid x:Name="HorizontalTemplate" Height="10">
						</Grid>

						<!-- Vertical Template -->
						<Grid x:Name="VerticalTemplate" Visibility="Collapsed" Width="10">
						 </Grid>

						<!-- Focus Visual -->
						<Rectangle x:Name="FocusVisual" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" >
							<Rectangle.Stroke>
								<SolidColorBrush Color="#6E9A002B"/>
							</Rectangle.Stroke>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Name="HyperlinkButton_FooterLinks" TargetType="HyperlinkButton">
		<Setter Property="Margin"
				Value="0,0,8,0" />
		<Setter Property="Foreground"
				Value="Black" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid Cursor="{TemplateBinding Cursor}"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation To="White"
														Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
														Storyboard.TargetName="Content"
														Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<TextBlock x:Name="Content"
								   Text="{TemplateBinding Content}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   Margin="{TemplateBinding Padding}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Name="HyperlinkButton_AlertLinks_Style"
		   TargetType="HyperlinkButton" BasedOn="{StaticResource HyperlinkButton_FooterLinks}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid Cursor="{TemplateBinding Cursor}"
						  Background="{TemplateBinding Background}">
						<TextBlock x:Name="Content"
								   Text="{TemplateBinding Content}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   Margin="{TemplateBinding Padding}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>